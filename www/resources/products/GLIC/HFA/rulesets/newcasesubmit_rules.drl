import com.stepsoln.core.rules.Question;
import com.stepsoln.core.rules.requirements.*;
import com.stepsoln.core.rules.uw.*;
import java.util.ArrayList;
import com.stepsoln.core.db.Lookup;
import com.stepsoln.core.rules.CaseRulesObject;
import com.stepsoln.core.rules.RulesResponse;

global com.stepsoln.core.rules.RulesResponse rulesResponse;

rule "4. AUTODECLINE based on Merica APS and Face Amount"
salience 175
activation-group "caseStatusUpdate"
	when
		CaseMericaRecommendationData(recommendation=='APS');
		theCase:CaseData($f:faceAmount<100000);
		riskCalcData:CaseUwRiskCalcData()
	then
		theCase.setCaseStatus("AUTODECLINE");
		riskCalcData.setUwStatus("DECLINE");
		theCase.setUwStatusReasonCode("13");
		theCase.setSubmitTaskDescription("AUTODECLINE based on Merica APS and Face Amount<100000 ($"+$f+")");
		rulesResponse.addToRuleFiredList(4);
end

rule "5. Contract State Over Phone Kickout"
salience 170
activation-group "caseStatusUpdate"
	when
       	theCase:CaseData(contactMethod=='PHONE', contractState=='PR')
       	riskCalcData:CaseUwRiskCalcData()
    then
		theCase.setCaseStatus("AUTODECLINE");
		riskCalcData.setUwStatus("DECLINE");
		theCase.setUwStatusReasonCode("91");
		theCase.setSubmitTaskDescription("Contract State Over Phone Kickout");
		rulesResponse.addToRuleFiredList(5);
end


rule "11. Maximum Insurance Amount"
salience 105
activation-group "caseStatusUpdate"
	when
       	theCase:CaseData(maxInsuranceAmount < 25000)
       	and (not Requirement(code=="ALF", status == 'ERROR') )
       	riskCalcData:CaseUwRiskCalcData()
    then
		theCase.setCaseStatus("AUTODECLINE");
		riskCalcData.setUwStatus("DECLINE");
		theCase.setUwStatusReasonCode("61");
		theCase.setSubmitTaskDescription("Exceeds Maximum Insurance Amount");
		rulesResponse.addToRuleFiredList(11);
end



rule "15. If Question 6b = Y; AUTODECLINE"
salience 90
activation-group "caseStatusUpdate"
	when
		theCase:CaseData()
		Question(id in ("m6b"), answer == "Y");
		riskCalcData:CaseUwRiskCalcData()
	then
		theCase.setCaseStatus("AUTODECLINE");
		riskCalcData.setUwStatus("DECLINE");
		theCase.setUwStatusReasonCode("91");
		theCase.setSubmitTaskDescription("Felony");
		rulesResponse.addToRuleFiredList(15);
end

rule "16. 1035 Exchange rule"
salience 85
activation-group "caseStatusUpdate"
	when 
		theCase:CaseData()
		Question(id=="y_1035_exch_ind", answerAsBoolean==true)
		riskCalcData:CaseUwRiskCalcData()
	then
		theCase.setCaseStatus("AUTODECLINE");
		riskCalcData.setUwStatus("DECLINE");
		theCase.setUwStatusReasonCode("91");
		theCase.setSubmitTaskDescription("1035 Exchange was answered YES");
		rulesResponse.addToRuleFiredList(16);
end

rule "17. set case status no driver's license INCOMPLETE"
salience 20
activation-group "caseStatusUpdate"
	when
		theCase:CaseData()
		Question(id == "driv_lic_number", answerAsString.toUpperCase() in ('NA','NONE', 'UNKNOWN')) 
			and (Question(id == "driv_lic_state", answerAsString.toUpperCase() in ('N_A','NOT APPLICABLE','ZZ','', 'UNKNOWN')) or not Question(id == "driv_lic_state"))
			and (not Requirement(code=="NDL", status in ("RESOLVED", "CANCELLED" ,"WAIVED")))
	then
		theCase.setCaseStatus("INCOMPLETE");
		theCase.setSubmitTaskDescription("Complete Driver's License Information");
		rulesResponse.addToRuleFiredList(17);
end

rule "18. Policy Owner Unresolved Signatures"
salience 19
activation-group "caseStatusUpdate"
	when
		theCase:CaseData(caseSource in ('CAPTIVE', 'EXTERNAL', 'INTERNET'));
		Requirement(type=='ESIGNATURE', target=='POLICY_OWNER', status not in ('RESOLVED'), orderStatus not in ('SIGNED'));
		Question(id=="oth_owner_ind", answerAsBoolean==true);
    then
    	theCase.setCaseStatus("INCOMPLETE");
    	theCase.setSubmitTaskDescription("Policy Owner Unresolved Signatures");
    	rulesResponse.addToRuleFiredList(19);
end

rule "19. FULLHIPAAPDF PAPER"
salience 18
activation-group "caseStatusUpdate"
	when
		theCase:CaseData(caseSource in ('CAPTIVE', 'EXTERNAL'));
		Requirement(type=='ESIGNATURE', description=='HIPAA - Primary Insured', status not in ('RESOLVED','WAIVED'), orderStatus not in ('SIGNED'));
		Requirement(type=='Paper Application');
    then
    	theCase.setCaseStatus("INCOMPLETE");
    	theCase.setSubmitTaskDescription("FULLHIPAAPDF PAPER unresolved signature");
    	rulesResponse.addToRuleFiredList(19);
end

rule "20. set case status no valid address INCOMPLETE"
salience 17
activation-group "caseStatusUpdate"
	when
		theCase:CaseData()
		ApplicantData(type=='PRIMARY_INSURED', validAddress==false)
		and (not Requirement(code=="NVA", status in( "RESOLVED", "CANCELLED","WAIVED")))
	then
		theCase.setCaseStatus("INCOMPLETE");
		theCase.setSubmitTaskDescription("Verify primary applicant address");
		rulesResponse.addToRuleFiredList(20);
end

rule "21. just In Time Appointment agent appointment check rule"
salience 16
activation-group "caseStatusUpdate"
	when
		theCase:CaseData(justInTimeAppointment=='true')
		jitRequirement:Requirement(code=='JIT', status not in ('RESOLVED','WAIVED'))
		theLookup:Lookup((code == theCase.getContractLocale().toString().toUpperCase() ||
			description.toString().toUpperCase() == theCase.getContractLocale().toString().toUpperCase()) && 
			name == "LOCALE_STATE")
       	theLicenseDataList:ArrayList() from collect(LicenseData(agentId == theCase.getAgentId(), licenseStatus == 'ACTIVE', licenseState == theLookup.getCode().toUpperCase()));
    	eval(theLicenseDataList.size() <= 0)
    then    	
    	theCase.setCaseStatus("INCOMPLETE");
    	theCase.setSubmitTaskDescription("Just In Time Appointment license"); 
    	rulesResponse.addToRuleFiredList(21);       	
end


rule "22. Set the current risk calc id to be the one from initial risk calculation"
when
		theCase:CaseData()
		riskCalcData:CaseUwRiskCalcData()
    then    	
    	theCase.setCurrentRiskCalcId(riskCalcData.getId()); 
    	rulesResponse.addToRuleFiredList(21);
end
