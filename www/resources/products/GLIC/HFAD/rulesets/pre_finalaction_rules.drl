import com.stepsoln.core.rules.requirements.*;
import com.stepsoln.core.rules.uw.*;
import com.stepsoln.core.util.DateUtil;
import org.apache.commons.lang.StringUtils;

global com.stepsoln.core.rules.RulesResponse rulesResponse;

salience 110
rule "0. Resolve FCRA if case created before 7/31/2013"
when
	    r:Requirement(status not in ("RESOLVED", "CANCELLED"), code == "FCRA", $code:description, $s:status, group in ("NB", "UW", "SIGNATURE"))
	    CaseData(createdDate < DateUtil.parseDate(DateUtil.FORMAT_YYYYMMDD, "20130731"))
then
		r.setStatus("RESOLVED");
end

salience 110
rule "0. Require FCRA if case created after 7/31/2013"
when
	    Requirement(status not in ("RESOLVED", "CANCELLED"), code == "FCRA", $code:description, $s:status, group in ("NB", "UW", "SIGNATURE"))
	    CaseData(createdDate >= DateUtil.parseDate(DateUtil.FORMAT_YYYYMMDD, "20130731"))
then
		rulesResponse.addRequiredOnce("Requirement ("+$code+") is NOT resolved or waived (status: "+$s+")");
		rulesResponse.addToRuleFiredList(0);
end

salience 100
rule "1. All Requirements need to be resolved or waived"
when		
	    Requirement(status not in( "RESOLVED", "CANCELLED"), code != "FCRA", $code:description, $s:status, group in ("NB", "UW", "SIGNATURE")) 	   
then
		rulesResponse.addRequiredOnce("Requirement ("+$code+") is NOT resolved or waived (status: "+$s+")");
		rulesResponse.addToRuleFiredList(1);
end

salience 100
rule "2. For APPROVED final action all Medical Conditions have to be reconciled"
when
	CaseData("APPROVED" == caseStatus)
	Number(intValue > 0) from accumulate(CaseUwMedicalConditionGroupRulesFact("SUCCESSFUL" != autoreconciliatinoStatus),
         init( int total = 0; ),
         action( total += 1; ),
         reverse( total -= 1; ),
         result( new Integer( total ) ) )
	
then
	rulesResponse.addRequiredOnce("All Medical Conditions have to be reconciled");
	rulesResponse.addToRuleFiredList(2);
end

salience 100
rule "3. For APPROVED final action all Medical Drugs have to be reconciled"
when
	CaseData("APPROVED" == caseStatus)
	Number(intValue > 0) from accumulate(CaseUwMedicalDrugData("SUCCESSFUL" != currentStatus),
         init( int total = 0; ),
         action( total += 1; ),
         reverse( total -= 1; ),
         result( new Integer( total ) ) )
then
	rulesResponse.addRequiredOnce("All Medical Drug have to be reconciled");
	rulesResponse.addToRuleFiredList(3);
end

//
//salience 100
//rule "4. For APPROVED final action all Demographic data have to be reconciled"
//when
//	CaseData("APPROVED" == caseStatus)
//	Number(intValue > 0) from accumulate(CaseUwDemographicData("SUCCESSFUL" != currentStatus),
//         init( int total = 0; ),
//         action( total += 1; ),
//         reverse( total -= 1; ),
//         result( new Integer( total ) ) )
//then
//	rulesResponse.addRequiredOnce("All Demographic data have to be reconciled");
//	rulesResponse.addToRuleFiredList(4);
//end

salience 100
rule "5. For APPROVED final action all MIB data have to be reconciled"
when
	CaseData("APPROVED" == caseStatus)
	Number(intValue > 0) from accumulate(CaseUwMibData("SUCCESSFUL" != currentStatus),
         init( int total = 0; ),
         action( total += 1; ),
         reverse( total -= 1; ),
         result( new Integer( total ) ) )
then
	rulesResponse.addRequiredOnce("All MIB reports have to be reconciled");
	rulesResponse.addToRuleFiredList(5);
end

salience 100
rule "6. For APPROVED final action final quote can not have a zero premium"
when
	CaseData("APPROVED" == caseStatus, premiumAmount <= 0.0)
then
	rulesResponse.addRequiredOnce("Final quote cannot have a zero premium amount");
	rulesResponse.addToRuleFiredList(6);
end